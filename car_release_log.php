<?php

$group_id = isset($_GET["group_id"]) ? $_GET["group_id"] : "";

// ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ Device ID ‡∏à‡∏≤‡∏Å URL (‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô '30339' ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ)
$deviceId = isset($_GET['device']) ? intval($_GET['device']) : 30339;

// ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ start ‡πÅ‡∏•‡∏∞ end ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ 00:00:00 ‡πÅ‡∏•‡∏∞ 23:59:59
$start = isset($_GET['start']) ? $_GET['start'] : date('Y-m-d 00:00:00');
$end = isset($_GET['end']) ? $_GET['end'] : date('Y-m-d 23:59:59');

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
function validateDate($date, $format = 'Y-m-d H:i:s') {
    $d = DateTime::createFromFormat($format, $date);
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    return $d && $d->format($format) === $date && $d->getTimestamp() !== false;
}
if (!validateDate($start) || !validateDate($end)) {
    die("‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug)
//echo "Device ID: " . htmlspecialchars($deviceId) . "<br>";
//echo "Start Time: " . htmlspecialchars($start) . "<br>";
//echo "End Time: " . htmlspecialchars($end) . "<br>";

$apiUrl = "https://api.gpsiam.app/device/log/" . $deviceId . "?start=" . urlencode($start) . "&end=" . urlencode($end);
$apiKey = "13dade62-5bd6-4082-b0ce-36757dec0d47"; // üîë ‡πÄ‡∏û‡∏¥‡πà‡∏° API Key

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $apiUrl);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    "Authorization: Bearer $apiKey", // üîë ‡πÄ‡∏û‡∏¥‡πà‡∏° Header Authorization
    "Content-Type: application/json"
]);

$response = curl_exec($ch);
curl_close($ch);

$data = json_decode($response, true);
?>

<!DOCTYPE html>
<html lang="TH">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Device Tracking</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Prompt:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <style>
        body {
            font-family: Prompt, Prompt;
			font-size: 12px;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        #map {
            width: 100%;
            height: 700px;
        }
        #loading {
            display: none; /* ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-4">
        <h2 class="text-center mb-4">‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏£‡∏ñ ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô : <?php echo htmlspecialchars($data['device']['name'] ?? 'Unknown'); ?></h2>       
    </div>
    <div id="loading" class="text-center my-3">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span>
    </div>
    <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà...</p>
    </div>
    <div id="map" class="rounded shadow-sm"></div>
    <script>
    var map = L.map('map').setView([13.801931, 100.586581], 10);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    var coordinates = <?php echo json_encode(array_map(function($log) {
        return [$log['latitude'], $log['longitude']];
    }, $data['logs'] ?? [])); ?>;

    if (coordinates.length > 0) {
        var polyline = L.polyline(coordinates, {color: 'blue'}).addTo(map);
        map.fitBounds(polyline.getBounds());

        L.marker(coordinates[0]).addTo(map)
            .bindPopup("üìç ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô").openPopup();

        L.marker(coordinates[coordinates.length - 1]).addTo(map)
            .bindPopup("üöõ ‡∏à‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î").openPopup();
   
    }
    </script>
    <script>
        var group_id = "<?php echo htmlspecialchars($group_id); ?>";
    </script>
    <script>
        function fetchAdditionalPOIs() {
    fetch(`https://script.google.com/macros/s/AKfycbxryA9gHLZQjNi4DQQWIBCRIEd3kDYGaQdhKsWxHZSurEkPrHJc2nkBnocwHu-S9C4u/exec?group_store_id=${encodeURIComponent(group_id)}`)
        .then(response => response.json())
        .then(data => {
            clearExistingPOIs(); // ‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
            updatePOIsOnMap(data);
        })
        .catch(error => console.error('Error fetching additional POIs:', error));
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
let poiMarkers = [];

function clearExistingPOIs() {
    poiMarkers.forEach(marker => map.removeLayer(marker));
    poiMarkers = []; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏°‡∏≤‡∏£‡πå‡∏Ñ‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
function updatePOIsOnMap(pois) {
    pois.forEach(poi => {
        let [lat, lng] = poi.lat_long.split(',').map(Number); // ‡πÅ‡∏õ‡∏•‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        let poiIcon = L.icon({
            iconUrl: 'shops.png', // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ
            iconSize: [32, 32], // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô
            iconAnchor: [16, 32], // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏à‡∏∏‡∏î‡∏û‡∏¥‡∏Å‡∏±‡∏î
            popupAnchor: [0, -32] // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á popup ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
        });

        let poiMarker = L.marker([lat, lng], { icon: poiIcon }).addTo(map)
            .bindTooltip(`<b>üè™ ${poi.store_name_result}</b>`, { 
                permanent: true, 
                direction: "top", 
                offset: [0, -15], // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                className: "store-label" // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ CSS ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ
            });

        poiMarkers.push(poiMarker); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏£‡πå‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏•‡∏á‡πÉ‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
    });
}
async function fetchAdditionalPOIs() {
    showLoading(); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Loading ‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    
    try {
        let response = await fetch(`https://script.google.com/macros/s/AKfycbxryA9gHLZQjNi4DQQWIBCRIEd3kDYGaQdhKsWxHZSurEkPrHJc2nkBnocwHu-S9C4u/exec?group_store_id=${encodeURIComponent(group_id)}`);
        let data = await response.json();
        
        clearExistingPOIs(); // ‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        updatePOIsOnMap(data);

        adjustMapView(); // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏ã‡∏π‡∏°‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤

    } catch (error) {
        console.error('Error fetching additional POIs:', error);
    } finally {
        hideLoading(); // ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô Loading ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    }
}
function showLoading() {
    document.getElementById("loading").style.display = "block"; // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Loading
}

function hideLoading() {
    document.getElementById("loading").style.display = "none"; // ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô Loading
}

function adjustMapView() {
    let bounds = L.latLngBounds([]);

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ
    coordinates.forEach(coord => bounds.extend(coord));

    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    poiMarkers.forEach(marker => bounds.extend(marker.getLatLng()));

    // ‚úÖ ‡∏ã‡∏π‡∏°‡∏≠‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (bounds.isValid()) {
        map.fitBounds(bounds, { padding: [100, 100] }); // ‡∏õ‡∏£‡∏±‡∏ö padding ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á
    }
}

// ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏ã‡∏π‡∏°‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
fetchAdditionalPOIs();

    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
